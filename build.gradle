buildscript {
    ext {
        kotlinVersion = '1.1.2'
        springBootVersion = '1.5.3.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('org.springframework:springloaded:1.2.6.RELEASE')
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.7
targetCompatibility = 1.7

compileKotlin {
    kotlinOptions.jvmTarget = "1.6"
}
//compileTestKotlin {
//    kotlinOptions.jvmTarget = "1.6"
//}

repositories {
    mavenCentral()
}

idea{
    module{
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

dependencies {
//    compile("org.springframework.boot:spring-boot-starter-web") {
//        exclude module: "spring-boot-starter-tomcat"
//    }
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
//    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")

    //compile("log4j:log4j:+")

    //testCompile('org.springframework.boot:spring-boot-starter-test')

    // enable hot swap
    compile("org.springframework.boot:spring-boot-devtools")


    // enable websocket
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.webjars:webjars-locator")
    compile("org.webjars:sockjs-client:1.0.2")
    compile("org.webjars:stomp-websocket:2.3.3")
    compile("org.webjars:bootstrap:3.3.7")
    compile("org.webjars:jquery:3.1.0")
}
